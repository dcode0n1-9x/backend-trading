
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  panNumber: 'panNumber',
  aadhaarNumber: 'aadhaarNumber',
  dateOfBirth: 'dateOfBirth',
  kycStatus: 'kycStatus',
  accountType: 'accountType',
  role: 'role',
  isActive: 'isActive',
  twoFactorEnabled: 'twoFactorEnabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isVerified: 'isVerified'
};

exports.Prisma.UserVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stage1: 'stage1',
  stage2: 'stage2',
  stage3: 'stage3',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  fatherName: 'fatherName',
  motherName: 'motherName',
  maritalStatus: 'maritalStatus',
  country: 'country',
  occupation: 'occupation',
  annualIncome: 'annualIncome',
  tradingExperience: 'tradingExperience',
  riskProfile: 'riskProfile',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BankAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountNumber: 'accountNumber',
  ifscCode: 'ifscCode',
  bankName: 'bankName',
  branchName: 'branchName',
  accountHolderName: 'accountHolderName',
  accountType: 'accountType',
  isPrimary: 'isPrimary',
  isVerified: 'isVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceType: 'deviceType',
  isActive: 'isActive',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.FundTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  transactionType: 'transactionType',
  amount: 'amount',
  status: 'status',
  paymentMode: 'paymentMode',
  utrNumber: 'utrNumber',
  bankAccountId: 'bankAccountId',
  remarks: 'remarks',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MarginScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  availableCash: 'availableCash',
  usedMargin: 'usedMargin',
  availableMargin: 'availableMargin',
  collateralValue: 'collateralValue',
  openingBalance: 'openingBalance',
  payin: 'payin',
  payout: 'payout',
  spanMargin: 'spanMargin',
  exposureMargin: 'exposureMargin',
  optionPremium: 'optionPremium',
  updatedAt: 'updatedAt'
};

exports.Prisma.InstrumentScalarFieldEnum = {
  id: 'id',
  instrumentToken: 'instrumentToken',
  exchangeToken: 'exchangeToken',
  tradingSymbol: 'tradingSymbol',
  name: 'name',
  exchange: 'exchange',
  segment: 'segment',
  instrumentType: 'instrumentType',
  tickSize: 'tickSize',
  lotSize: 'lotSize',
  expiry: 'expiry',
  strike: 'strike',
  isin: 'isin',
  isActive: 'isActive',
  lastPrice: 'lastPrice',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MarketDepthScalarFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId',
  side: 'side',
  price: 'price',
  quantity: 'quantity',
  orders: 'orders',
  timestamp: 'timestamp'
};

exports.Prisma.PriceHistoryScalarFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId',
  open: 'open',
  high: 'high',
  low: 'low',
  close: 'close',
  volume: 'volume',
  ohlcDate: 'ohlcDate',
  interval: 'interval'
};

exports.Prisma.PortfolioScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalValue: 'totalValue',
  investedValue: 'investedValue',
  currentValue: 'currentValue',
  dayChange: 'dayChange',
  dayChangePercent: 'dayChangePercent',
  totalPnl: 'totalPnl',
  totalPnlPercent: 'totalPnlPercent',
  xirr: 'xirr',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.HoldingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  quantity: 'quantity',
  averagePrice: 'averagePrice',
  lastPrice: 'lastPrice',
  pnl: 'pnl',
  dayChange: 'dayChange',
  dayChangePercent: 'dayChangePercent',
  collateralQuantity: 'collateralQuantity',
  collateralType: 'collateralType',
  product: 'product',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PositionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  product: 'product',
  quantity: 'quantity',
  overnightQuantity: 'overnightQuantity',
  averagePrice: 'averagePrice',
  lastPrice: 'lastPrice',
  value: 'value',
  pnl: 'pnl',
  m2m: 'm2m',
  unrealised: 'unrealised',
  realised: 'realised',
  buyQuantity: 'buyQuantity',
  buyValue: 'buyValue',
  buyPrice: 'buyPrice',
  sellQuantity: 'sellQuantity',
  sellValue: 'sellValue',
  sellPrice: 'sellPrice',
  multiplier: 'multiplier',
  tradingSymbol: 'tradingSymbol',
  exchange: 'exchange',
  positionType: 'positionType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  userId: 'userId',
  instrumentId: 'instrumentId',
  parentOrderId: 'parentOrderId',
  exchangeOrderId: 'exchangeOrderId',
  exchangeTimestamp: 'exchangeTimestamp',
  placedBy: 'placedBy',
  variety: 'variety',
  orderType: 'orderType',
  transactionType: 'transactionType',
  validity: 'validity',
  product: 'product',
  exchange: 'exchange',
  tradingSymbol: 'tradingSymbol',
  quantity: 'quantity',
  disclosedQuantity: 'disclosedQuantity',
  price: 'price',
  triggerPrice: 'triggerPrice',
  averagePrice: 'averagePrice',
  filledQuantity: 'filledQuantity',
  pendingQuantity: 'pendingQuantity',
  cancelledQuantity: 'cancelledQuantity',
  status: 'status',
  statusMessage: 'statusMessage',
  tag: 'tag',
  clientOrderId: 'clientOrderId',
  orderTimestamp: 'orderTimestamp',
  exchangeUpdateTime: 'exchangeUpdateTime',
  rejectedBy: 'rejectedBy',
  cancelledBy: 'cancelledBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TradeScalarFieldEnum = {
  id: 'id',
  tradeId: 'tradeId',
  orderId: 'orderId',
  userId: 'userId',
  instrumentId: 'instrumentId',
  exchange: 'exchange',
  tradingSymbol: 'tradingSymbol',
  transactionType: 'transactionType',
  product: 'product',
  quantity: 'quantity',
  price: 'price',
  value: 'value',
  exchangeTimestamp: 'exchangeTimestamp',
  createdAt: 'createdAt'
};

exports.Prisma.TradeChargesScalarFieldEnum = {
  id: 'id',
  tradeId: 'tradeId',
  brokerage: 'brokerage',
  stt: 'stt',
  exchangeTxnCharge: 'exchangeTxnCharge',
  gst: 'gst',
  sebiTurnover: 'sebiTurnover',
  stampDuty: 'stampDuty',
  totalCharges: 'totalCharges',
  netAmount: 'netAmount'
};

exports.Prisma.GTTOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gttType: 'gttType',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol',
  exchange: 'exchange',
  triggerType: 'triggerType',
  triggerPrice: 'triggerPrice',
  lastPrice: 'lastPrice',
  limitPrice: 'limitPrice',
  stopLossPrice: 'stopLossPrice',
  quantity: 'quantity',
  product: 'product',
  orderType: 'orderType',
  status: 'status',
  expiresAt: 'expiresAt',
  triggeredAt: 'triggeredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WatchlistScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WatchlistItemScalarFieldEnum = {
  id: 'id',
  watchlistId: 'watchlistId',
  instrumentId: 'instrumentId',
  sortOrder: 'sortOrder',
  addedAt: 'addedAt'
};

exports.Prisma.AlertScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  alertType: 'alertType',
  message: 'message',
  triggerPrice: 'triggerPrice',
  condition: 'condition',
  isTriggered: 'isTriggered',
  isRead: 'isRead',
  triggeredAt: 'triggeredAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  notificationType: 'notificationType',
  title: 'title',
  message: 'message',
  isRead: 'isRead',
  priority: 'priority',
  createdAt: 'createdAt'
};

exports.Prisma.BasketScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description',
  totalValue: 'totalValue',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BasketItemScalarFieldEnum = {
  id: 'id',
  basketId: 'basketId',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol',
  exchange: 'exchange',
  transactionType: 'transactionType',
  quantity: 'quantity',
  orderType: 'orderType',
  price: 'price',
  triggerPrice: 'triggerPrice',
  product: 'product',
  sortOrder: 'sortOrder'
};

exports.Prisma.CorporateActionScalarFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId',
  actionType: 'actionType',
  exDate: 'exDate',
  recordDate: 'recordDate',
  announcementDate: 'announcementDate',
  description: 'description',
  oldSymbol: 'oldSymbol',
  newSymbol: 'newSymbol',
  ratio: 'ratio',
  dividendAmount: 'dividendAmount',
  isProcessed: 'isProcessed',
  processedAt: 'processedAt',
  createdAt: 'createdAt'
};

exports.Prisma.TradeJournalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tradeId: 'tradeId',
  orderId: 'orderId',
  date: 'date',
  notes: 'notes',
  tags: 'tags',
  strategy: 'strategy',
  emotionalState: 'emotionalState',
  learnings: 'learnings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DailyPnLScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  realizedPnl: 'realizedPnl',
  unrealizedPnl: 'unrealizedPnl',
  totalPnl: 'totalPnl',
  equityPnl: 'equityPnl',
  foPnl: 'foPnl',
  commodityPnl: 'commodityPnl',
  charges: 'charges',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  panNumber: 'panNumber',
  aadhaarNumber: 'aadhaarNumber'
};

exports.Prisma.UserVerificationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.UserProfileOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  fatherName: 'fatherName',
  motherName: 'motherName',
  maritalStatus: 'maritalStatus',
  country: 'country',
  occupation: 'occupation',
  annualIncome: 'annualIncome',
  tradingExperience: 'tradingExperience'
};

exports.Prisma.BankAccountOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountNumber: 'accountNumber',
  ifscCode: 'ifscCode',
  bankName: 'bankName',
  branchName: 'branchName',
  accountHolderName: 'accountHolderName'
};

exports.Prisma.SessionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceType: 'deviceType'
};

exports.Prisma.FundTransactionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  utrNumber: 'utrNumber',
  bankAccountId: 'bankAccountId',
  remarks: 'remarks'
};

exports.Prisma.MarginOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.InstrumentOrderByRelevanceFieldEnum = {
  id: 'id',
  instrumentToken: 'instrumentToken',
  exchangeToken: 'exchangeToken',
  tradingSymbol: 'tradingSymbol',
  name: 'name',
  isin: 'isin'
};

exports.Prisma.MarketDepthOrderByRelevanceFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId'
};

exports.Prisma.PriceHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId',
  interval: 'interval'
};

exports.Prisma.PortfolioOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.HoldingOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  collateralType: 'collateralType'
};

exports.Prisma.PositionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  userId: 'userId',
  instrumentId: 'instrumentId',
  parentOrderId: 'parentOrderId',
  exchangeOrderId: 'exchangeOrderId',
  placedBy: 'placedBy',
  tradingSymbol: 'tradingSymbol',
  statusMessage: 'statusMessage',
  tag: 'tag',
  clientOrderId: 'clientOrderId',
  rejectedBy: 'rejectedBy',
  cancelledBy: 'cancelledBy'
};

exports.Prisma.TradeOrderByRelevanceFieldEnum = {
  id: 'id',
  tradeId: 'tradeId',
  orderId: 'orderId',
  userId: 'userId',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol'
};

exports.Prisma.TradeChargesOrderByRelevanceFieldEnum = {
  id: 'id',
  tradeId: 'tradeId'
};

exports.Prisma.GTTOrderOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol'
};

exports.Prisma.WatchlistOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name'
};

exports.Prisma.WatchlistItemOrderByRelevanceFieldEnum = {
  id: 'id',
  watchlistId: 'watchlistId',
  instrumentId: 'instrumentId'
};

exports.Prisma.AlertOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  message: 'message',
  condition: 'condition'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message'
};

exports.Prisma.BasketOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description'
};

exports.Prisma.BasketItemOrderByRelevanceFieldEnum = {
  id: 'id',
  basketId: 'basketId',
  instrumentId: 'instrumentId',
  tradingSymbol: 'tradingSymbol'
};

exports.Prisma.CorporateActionOrderByRelevanceFieldEnum = {
  id: 'id',
  instrumentId: 'instrumentId',
  description: 'description',
  oldSymbol: 'oldSymbol',
  newSymbol: 'newSymbol',
  ratio: 'ratio'
};

exports.Prisma.TradeJournalOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  tradeId: 'tradeId',
  orderId: 'orderId',
  notes: 'notes',
  tags: 'tags',
  strategy: 'strategy',
  emotionalState: 'emotionalState',
  learnings: 'learnings'
};

exports.Prisma.DailyPnLOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  BROKER: 'BROKER'
};

exports.KYCStatus = exports.$Enums.KYCStatus = {
  PENDING: 'PENDING',
  SUBMITTED: 'SUBMITTED',
  VERIFIED: 'VERIFIED',
  REJECTED: 'REJECTED'
};

exports.AccountType = exports.$Enums.AccountType = {
  INDIVIDUAL: 'INDIVIDUAL',
  CORPORATE: 'CORPORATE',
  PARTNERSHIP: 'PARTNERSHIP',
  HUF: 'HUF'
};

exports.RiskProfile = exports.$Enums.RiskProfile = {
  LOW: 'LOW',
  MODERATE: 'MODERATE',
  HIGH: 'HIGH'
};

exports.BankAccountType = exports.$Enums.BankAccountType = {
  SAVINGS: 'SAVINGS',
  CURRENT: 'CURRENT'
};

exports.FundTransactionType = exports.$Enums.FundTransactionType = {
  DEPOSIT: 'DEPOSIT',
  WITHDRAWAL: 'WITHDRAWAL'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentMode = exports.$Enums.PaymentMode = {
  UPI: 'UPI',
  NET_BANKING: 'NET_BANKING',
  NEFT: 'NEFT',
  RTGS: 'RTGS',
  IMPS: 'IMPS'
};

exports.Exchange = exports.$Enums.Exchange = {
  NSE: 'NSE',
  BSE: 'BSE',
  NFO: 'NFO',
  BFO: 'BFO',
  CDS: 'CDS',
  MCX: 'MCX'
};

exports.Segment = exports.$Enums.Segment = {
  EQUITY: 'EQUITY',
  FUTURES: 'FUTURES',
  OPTIONS: 'OPTIONS',
  CURRENCY: 'CURRENCY',
  COMMODITY: 'COMMODITY'
};

exports.InstrumentType = exports.$Enums.InstrumentType = {
  EQ: 'EQ',
  FUTIDX: 'FUTIDX',
  FUTSTK: 'FUTSTK',
  OPTIDX: 'OPTIDX',
  OPTSTK: 'OPTSTK',
  FUTCOM: 'FUTCOM',
  OPTCOM: 'OPTCOM',
  FUTCUR: 'FUTCUR',
  OPTCUR: 'OPTCUR'
};

exports.OrderSide = exports.$Enums.OrderSide = {
  BUY: 'BUY',
  SELL: 'SELL'
};

exports.OrderVariety = exports.$Enums.OrderVariety = {
  REGULAR: 'REGULAR',
  AMO: 'AMO',
  BO: 'BO',
  CO: 'CO',
  ICEBERG: 'ICEBERG'
};

exports.OrderType = exports.$Enums.OrderType = {
  MARKET: 'MARKET',
  LIMIT: 'LIMIT',
  SL: 'SL',
  SLM: 'SLM'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  BUY: 'BUY',
  SELL: 'SELL'
};

exports.OrderValidity = exports.$Enums.OrderValidity = {
  DAY: 'DAY',
  IOC: 'IOC',
  TTL: 'TTL'
};

exports.ProductType = exports.$Enums.ProductType = {
  CNC: 'CNC',
  MIS: 'MIS',
  NRML: 'NRML'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  OPEN: 'OPEN',
  COMPLETE: 'COMPLETE',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED',
  MODIFIED: 'MODIFIED',
  TRIGGER_PENDING: 'TRIGGER_PENDING'
};

exports.PositionType = exports.$Enums.PositionType = {
  DAY: 'DAY',
  OVERNIGHT: 'OVERNIGHT'
};

exports.GTTType = exports.$Enums.GTTType = {
  SINGLE: 'SINGLE',
  OCO: 'OCO'
};

exports.TriggerType = exports.$Enums.TriggerType = {
  SINGLE: 'SINGLE',
  TWO_LEG: 'TWO_LEG'
};

exports.GTTStatus = exports.$Enums.GTTStatus = {
  ACTIVE: 'ACTIVE',
  TRIGGERED: 'TRIGGERED',
  DISABLED: 'DISABLED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED'
};

exports.AlertType = exports.$Enums.AlertType = {
  PRICE_ALERT: 'PRICE_ALERT',
  PERCENTAGE_CHANGE: 'PERCENTAGE_CHANGE',
  VOLUME_SPIKE: 'VOLUME_SPIKE',
  NEWS: 'NEWS',
  CORPORATE_ACTION: 'CORPORATE_ACTION',
  MARGIN_CALL: 'MARGIN_CALL',
  ORDER_UPDATE: 'ORDER_UPDATE'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  ORDER_UPDATE: 'ORDER_UPDATE',
  TRADE_EXECUTED: 'TRADE_EXECUTED',
  FUND_UPDATE: 'FUND_UPDATE',
  MARGIN_CALL: 'MARGIN_CALL',
  GTT_TRIGGERED: 'GTT_TRIGGERED',
  CORPORATE_ACTION: 'CORPORATE_ACTION',
  SYSTEM_ALERT: 'SYSTEM_ALERT'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.CorporateActionType = exports.$Enums.CorporateActionType = {
  DIVIDEND: 'DIVIDEND',
  BONUS: 'BONUS',
  SPLIT: 'SPLIT',
  MERGER: 'MERGER',
  RIGHTS: 'RIGHTS',
  BUYBACK: 'BUYBACK',
  DELISTING: 'DELISTING'
};

exports.MartialStatus = exports.$Enums.MartialStatus = {
  SINGLE: 'SINGLE',
  MARRIED: 'MARRIED'
};

exports.AnnualIncome = exports.$Enums.AnnualIncome = {
  BELOW_1_LAKH: 'BELOW_1_LAKH',
  BETWEEN_1_TO_5_LAKHS: 'BETWEEN_1_TO_5_LAKHS',
  BETWEEN_5_TO_10_LAKHS: 'BETWEEN_5_TO_10_LAKHS',
  BETWEEN_10_TO_25_LAKHS: 'BETWEEN_10_TO_25_LAKHS',
  BETWEEN_25_TO_1_CRORE: 'BETWEEN_25_TO_1_CRORE',
  ABOVE_1_CRORE: 'ABOVE_1_CRORE'
};

exports.TradingExperience = exports.$Enums.TradingExperience = {
  NEW: 'NEW',
  BETWEEN_1_TO_5_YEARS: 'BETWEEN_1_TO_5_YEARS',
  BETWEEN_5_TO_10_YEARS: 'BETWEEN_5_TO_10_YEARS',
  BETWEEN_10_TO_15_YEARS: 'BETWEEN_10_TO_15_YEARS',
  MORE_THAN_15_YEARS: 'MORE_THAN_15_YEARS'
};

exports.Occupation = exports.$Enums.Occupation = {
  BUSINESS: 'BUSINESS',
  HOUSEWIFE: 'HOUSEWIFE',
  STUDENT: 'STUDENT',
  PROFESSIONAL: 'PROFESSIONAL',
  PRIVATE_SECTOR: 'PRIVATE_SECTOR',
  AGRICULTURIST: 'AGRICULTURIST',
  GOVERMENT_SERVICE: 'GOVERMENT_SERVICE',
  PUBLIC_SECTOR: 'PUBLIC_SECTOR',
  RETIRED: 'RETIRED',
  OTHERS: 'OTHERS'
};

exports.SettlementType = exports.$Enums.SettlementType = {
  QUATERLY: 'QUATERLY',
  MONTHLY: 'MONTHLY'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserVerification: 'UserVerification',
  UserProfile: 'UserProfile',
  BankAccount: 'BankAccount',
  Session: 'Session',
  FundTransaction: 'FundTransaction',
  Margin: 'Margin',
  Instrument: 'Instrument',
  MarketDepth: 'MarketDepth',
  PriceHistory: 'PriceHistory',
  Portfolio: 'Portfolio',
  Holding: 'Holding',
  Position: 'Position',
  Order: 'Order',
  Trade: 'Trade',
  TradeCharges: 'TradeCharges',
  GTTOrder: 'GTTOrder',
  Watchlist: 'Watchlist',
  WatchlistItem: 'WatchlistItem',
  Alert: 'Alert',
  Notification: 'Notification',
  Basket: 'Basket',
  BasketItem: 'BasketItem',
  CorporateAction: 'CorporateAction',
  TradeJournal: 'TradeJournal',
  DailyPnL: 'DailyPnL'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\elysiaDump\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "fullTextSearchPostgres"
    ],
    "sourceFilePath": "D:\\elysiaDump\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../generated/prisma\"\n  previewFeatures = [\"fullTextSearchPostgres\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================\n// USER MANAGEMENT\n// ============================================\n\nmodel User {\n  id               String            @id @default(cuid())\n  email            String?           @unique\n  phone            String            @unique\n  password         String?\n  firstName        String?\n  lastName         String?\n  panNumber        String?           @unique\n  aadhaarNumber    String?\n  dateOfBirth      DateTime?\n  kycStatus        KYCStatus?        @default(PENDING)\n  accountType      AccountType?      @default(INDIVIDUAL)\n  role             UserRole?         @default(USER)\n  isActive         Boolean?          @default(true)\n  twoFactorEnabled Boolean?          @default(false)\n  createdAt        DateTime?         @default(now())\n  updatedAt        DateTime?         @updatedAt\n  isVerified       Boolean           @default(false)\n  // Relations\n  // currency        String\n  profile          UserProfile?\n  bankAccounts     BankAccount[]\n  funds            FundTransaction[]\n  holdings         Holding[]\n  positions        Position[]\n  orders           Order[]\n  trades           Trade[]\n  watchlists       Watchlist[]\n  portfolios       Portfolio[]\n  gttOrders        GTTOrder[]\n  baskets          Basket[]\n  alerts           Alert[]\n  notifications    Notification[]\n  sessions         Session[]\n  UserVerification UserVerification?\n\n  @@index([email, phone])\n}\n\nmodel UserVerification {\n  id        String   @id @default(cuid())\n  userId    String   @unique\n  stage1    Boolean  @default(false)\n  stage2    Boolean  @default(false)\n  stage3    Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel UserProfile {\n  id                String      @id @default(cuid())\n  userId            String      @unique\n  addressLine1      String\n  addressLine2      String?\n  city              String\n  state             String\n  pincode           String\n  fatherName        String?\n  motherName        String?\n  maritalStatus     String?\n  country           String      @default(\"India\")\n  occupation        String?\n  annualIncome      String?\n  tradingExperience String?\n  riskProfile       RiskProfile @default(MODERATE)\n  createdAt         DateTime    @default(now())\n  updatedAt         DateTime    @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel BankAccount {\n  id                String          @id @default(cuid())\n  userId            String\n  accountNumber     String\n  ifscCode          String\n  bankName          String\n  branchName        String\n  accountHolderName String\n  accountType       BankAccountType\n  isPrimary         Boolean         @default(false)\n  isVerified        Boolean         @default(false)\n  createdAt         DateTime        @default(now())\n  updatedAt         DateTime        @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\nmodel Session {\n  id         String   @id @default(cuid())\n  userId     String\n  token      String   @unique\n  ipAddress  String?\n  userAgent  String?\n  deviceType String?\n  isActive   Boolean  @default(true)\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, token])\n}\n\n// ============================================\n// FUNDS MANAGEMENT\n// ============================================\n\nmodel FundTransaction {\n  id              String              @id @default(cuid())\n  userId          String\n  transactionType FundTransactionType\n  amount          Float\n  status          TransactionStatus   @default(PENDING)\n  paymentMode     PaymentMode?\n  utrNumber       String?             @unique\n  bankAccountId   String?\n  remarks         String?\n  processedAt     DateTime?\n  createdAt       DateTime            @default(now())\n  updatedAt       DateTime            @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, transactionType, status])\n}\n\nmodel Margin {\n  id              String   @id @default(cuid())\n  userId          String   @unique\n  availableCash   Float    @default(0.0)\n  usedMargin      Float    @default(0.0)\n  availableMargin Float    @default(0.0)\n  collateralValue Float    @default(0.0)\n  openingBalance  Float    @default(0.0)\n  payin           Float    @default(0.0)\n  payout          Float    @default(0.0)\n  spanMargin      Float    @default(0.0)\n  exposureMargin  Float    @default(0.0)\n  optionPremium   Float    @default(0.0)\n  updatedAt       DateTime @updatedAt\n\n  @@index([userId])\n}\n\n// ============================================\n// INSTRUMENTS & MARKET DATA\n// ============================================\n\nmodel Instrument {\n  id              String         @id @default(cuid())\n  instrumentToken String         @unique\n  exchangeToken   String\n  tradingSymbol   String\n  name            String\n  exchange        Exchange\n  segment         Segment\n  instrumentType  InstrumentType\n  tickSize        Float          @default(0.05)\n  lotSize         Int            @default(1)\n  expiry          DateTime?\n  strike          Float?\n  isin            String?\n  isActive        Boolean        @default(true)\n  lastPrice       Float          @default(0.0)\n  lastUpdated     DateTime       @default(now())\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n\n  // Relations\n  holdings       Holding[]\n  positions      Position[]\n  orders         Order[]\n  trades         Trade[]\n  marketDepth    MarketDepth[]\n  priceHistory   PriceHistory[]\n  watchlistItems WatchlistItem[]\n\n  @@index([tradingSymbol, exchange])\n  @@index([instrumentToken])\n}\n\nmodel MarketDepth {\n  id           String    @id @default(cuid())\n  instrumentId String\n  side         OrderSide\n  price        Float\n  quantity     Int\n  orders       Int\n  timestamp    DateTime  @default(now())\n\n  instrument Instrument @relation(fields: [instrumentId], references: [id], onDelete: Cascade)\n\n  @@index([instrumentId, side, timestamp])\n}\n\nmodel PriceHistory {\n  id           String   @id @default(cuid())\n  instrumentId String\n  open         Float\n  high         Float\n  low          Float\n  close        Float\n  volume       Int\n  ohlcDate     DateTime\n  interval     String // \"1minute\", \"5minute\", \"day\", etc.\n\n  instrument Instrument @relation(fields: [instrumentId], references: [id], onDelete: Cascade)\n\n  @@unique([instrumentId, ohlcDate, interval])\n  @@index([instrumentId, ohlcDate])\n}\n\n// ============================================\n// PORTFOLIO & HOLDINGS\n// ============================================\n\nmodel Portfolio {\n  id               String   @id @default(cuid())\n  userId           String\n  totalValue       Float    @default(0.0)\n  investedValue    Float    @default(0.0)\n  currentValue     Float    @default(0.0)\n  dayChange        Float    @default(0.0)\n  dayChangePercent Float    @default(0.0)\n  totalPnl         Float    @default(0.0)\n  totalPnlPercent  Float    @default(0.0)\n  xirr             Float?\n  updatedAt        DateTime @updatedAt\n  createdAt        DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\nmodel Holding {\n  id                 String      @id @default(cuid())\n  userId             String\n  instrumentId       String\n  quantity           Int\n  averagePrice       Float\n  lastPrice          Float\n  pnl                Float       @default(0.0)\n  dayChange          Float       @default(0.0)\n  dayChangePercent   Float       @default(0.0)\n  collateralQuantity Int         @default(0)\n  collateralType     String? // \"margin\" or \"cover\"\n  product            ProductType\n  createdAt          DateTime    @default(now())\n  updatedAt          DateTime    @updatedAt\n\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  instrument Instrument @relation(fields: [instrumentId], references: [id])\n\n  @@unique([userId, instrumentId, product])\n  @@index([userId])\n}\n\nmodel Position {\n  id                String       @id @default(cuid())\n  userId            String\n  instrumentId      String\n  product           ProductType\n  quantity          Int\n  overnightQuantity Int          @default(0)\n  averagePrice      Float\n  lastPrice         Float\n  value             Float\n  pnl               Float        @default(0.0)\n  m2m               Float        @default(0.0)\n  unrealised        Float        @default(0.0)\n  realised          Float        @default(0.0)\n  buyQuantity       Int          @default(0)\n  buyValue          Float        @default(0.0)\n  buyPrice          Float        @default(0.0)\n  sellQuantity      Int          @default(0)\n  sellValue         Float        @default(0.0)\n  sellPrice         Float        @default(0.0)\n  multiplier        Float        @default(1.0)\n  tradingSymbol     String\n  exchange          Exchange\n  positionType      PositionType\n  createdAt         DateTime     @default(now())\n  updatedAt         DateTime     @updatedAt\n\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  instrument Instrument @relation(fields: [instrumentId], references: [id])\n\n  @@unique([userId, instrumentId, product])\n  @@index([userId, tradingSymbol])\n}\n\n// ============================================\n// ORDER MANAGEMENT\n// ============================================\n\nmodel Order {\n  id                 String          @id @default(cuid())\n  orderId            String          @unique // Exchange order ID\n  userId             String\n  instrumentId       String\n  parentOrderId      String?\n  exchangeOrderId    String?\n  exchangeTimestamp  DateTime?\n  placedBy           String\n  variety            OrderVariety\n  orderType          OrderType\n  transactionType    TransactionType\n  validity           OrderValidity\n  product            ProductType\n  exchange           Exchange\n  tradingSymbol      String\n  quantity           Int\n  disclosedQuantity  Int             @default(0)\n  price              Float           @default(0.0)\n  triggerPrice       Float           @default(0.0)\n  averagePrice       Float           @default(0.0)\n  filledQuantity     Int             @default(0)\n  pendingQuantity    Int\n  cancelledQuantity  Int             @default(0)\n  status             OrderStatus\n  statusMessage      String?\n  tag                String?\n  clientOrderId      String?\n  orderTimestamp     DateTime        @default(now())\n  exchangeUpdateTime DateTime?\n  rejectedBy         String?\n  cancelledBy        String?\n  createdAt          DateTime        @default(now())\n  updatedAt          DateTime        @updatedAt\n\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  instrument Instrument @relation(fields: [instrumentId], references: [id])\n  trades     Trade[]\n\n  @@index([userId, status])\n  @@index([orderId])\n  @@index([tradingSymbol, exchange])\n}\n\nmodel Trade {\n  id                String          @id @default(cuid())\n  tradeId           String          @unique\n  orderId           String\n  userId            String\n  instrumentId      String\n  exchange          Exchange\n  tradingSymbol     String\n  transactionType   TransactionType\n  product           ProductType\n  quantity          Int\n  price             Float\n  value             Float\n  exchangeTimestamp DateTime\n  createdAt         DateTime        @default(now())\n\n  order      Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  user       User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  instrument Instrument    @relation(fields: [instrumentId], references: [id])\n  charges    TradeCharges?\n\n  @@index([userId, tradingSymbol])\n  @@index([tradeId])\n}\n\nmodel TradeCharges {\n  id                String @id @default(cuid())\n  tradeId           String @unique\n  brokerage         Float  @default(0.0)\n  stt               Float  @default(0.0)\n  exchangeTxnCharge Float  @default(0.0)\n  gst               Float  @default(0.0)\n  sebiTurnover      Float  @default(0.0)\n  stampDuty         Float  @default(0.0)\n  totalCharges      Float  @default(0.0)\n  netAmount         Float\n\n  trade Trade @relation(fields: [tradeId], references: [id], onDelete: Cascade)\n}\n\nmodel GTTOrder {\n  id            String      @id @default(cuid())\n  userId        String\n  gttType       GTTType\n  instrumentId  String\n  tradingSymbol String\n  exchange      Exchange\n  triggerType   TriggerType\n  triggerPrice  Float\n  lastPrice     Float\n  limitPrice    Float?\n  stopLossPrice Float?\n  quantity      Int\n  product       ProductType\n  orderType     OrderType\n  status        GTTStatus   @default(ACTIVE)\n  expiresAt     DateTime?\n  triggeredAt   DateTime?\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, status])\n}\n\n// ============================================\n// WATCHLIST & ALERTS\n// ============================================\n\nmodel Watchlist {\n  id        String   @id @default(cuid())\n  userId    String\n  name      String\n  isDefault Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user  User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  items WatchlistItem[]\n\n  @@index([userId])\n}\n\nmodel WatchlistItem {\n  id           String   @id @default(cuid())\n  watchlistId  String\n  instrumentId String\n  sortOrder    Int      @default(0)\n  addedAt      DateTime @default(now())\n\n  watchlist  Watchlist  @relation(fields: [watchlistId], references: [id], onDelete: Cascade)\n  instrument Instrument @relation(fields: [instrumentId], references: [id], onDelete: Cascade)\n\n  @@unique([watchlistId, instrumentId])\n  @@index([watchlistId])\n}\n\nmodel Alert {\n  id           String    @id @default(cuid())\n  userId       String\n  instrumentId String?\n  alertType    AlertType\n  message      String\n  triggerPrice Float?\n  condition    String? // \"above\", \"below\", \"equals\"\n  isTriggered  Boolean   @default(false)\n  isRead       Boolean   @default(false)\n  triggeredAt  DateTime?\n  expiresAt    DateTime?\n  createdAt    DateTime  @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isTriggered, isRead])\n}\n\nmodel Notification {\n  id               String           @id @default(cuid())\n  userId           String\n  notificationType NotificationType\n  title            String\n  message          String\n  isRead           Boolean          @default(false)\n  priority         Priority         @default(NORMAL)\n  createdAt        DateTime         @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isRead])\n}\n\n// ============================================\n// BASKETS & STRATEGIES\n// ============================================\n\nmodel Basket {\n  id          String   @id @default(cuid())\n  userId      String\n  name        String\n  description String?\n  totalValue  Float    @default(0.0)\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user  User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  items BasketItem[]\n\n  @@index([userId])\n}\n\nmodel BasketItem {\n  id              String          @id @default(cuid())\n  basketId        String\n  instrumentId    String\n  tradingSymbol   String\n  exchange        Exchange\n  transactionType TransactionType\n  quantity        Int\n  orderType       OrderType\n  price           Float?\n  triggerPrice    Float?\n  product         ProductType\n  sortOrder       Int             @default(0)\n\n  basket Basket @relation(fields: [basketId], references: [id], onDelete: Cascade)\n\n  @@index([basketId])\n}\n\n// ============================================\n// CORPORATE ACTIONS\n// ============================================\n\nmodel CorporateAction {\n  id               String              @id @default(cuid())\n  instrumentId     String\n  actionType       CorporateActionType\n  exDate           DateTime\n  recordDate       DateTime?\n  announcementDate DateTime\n  description      String\n  oldSymbol        String?\n  newSymbol        String?\n  ratio            String? // For splits/bonuses: \"1:2\"\n  dividendAmount   Float?\n  isProcessed      Boolean             @default(false)\n  processedAt      DateTime?\n  createdAt        DateTime            @default(now())\n\n  @@index([instrumentId, exDate])\n}\n\n// ============================================\n// REPORTS & ANALYTICS\n// ============================================\n\nmodel TradeJournal {\n  id             String   @id @default(cuid())\n  userId         String\n  tradeId        String?\n  orderId        String?\n  date           DateTime\n  notes          String\n  tags           String[] // Array of tags\n  strategy       String?\n  emotionalState String?\n  learnings      String?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  @@index([userId, date])\n}\n\nmodel DailyPnL {\n  id            String   @id @default(cuid())\n  userId        String\n  date          DateTime @unique\n  realizedPnl   Float    @default(0.0)\n  unrealizedPnl Float    @default(0.0)\n  totalPnl      Float    @default(0.0)\n  equityPnl     Float    @default(0.0)\n  foPnl         Float    @default(0.0)\n  commodityPnl  Float    @default(0.0)\n  charges       Float    @default(0.0)\n  createdAt     DateTime @default(now())\n\n  @@index([userId, date])\n}\n\n// ============================================\n// ENUMS\n// ============================================\n\nenum UserRole {\n  USER\n  ADMIN\n  BROKER\n}\n\nenum KYCStatus {\n  PENDING\n  SUBMITTED\n  VERIFIED\n  REJECTED\n}\n\nenum AccountType {\n  INDIVIDUAL\n  CORPORATE\n  PARTNERSHIP\n  HUF\n}\n\nenum RiskProfile {\n  LOW\n  MODERATE\n  HIGH\n}\n\nenum BankAccountType {\n  SAVINGS\n  CURRENT\n}\n\nenum FundTransactionType {\n  DEPOSIT\n  WITHDRAWAL\n}\n\nenum TransactionStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nenum PaymentMode {\n  UPI\n  NET_BANKING\n  NEFT\n  RTGS\n  IMPS\n}\n\nenum Exchange {\n  NSE\n  BSE\n  NFO\n  BFO\n  CDS\n  MCX\n}\n\nenum Segment {\n  EQUITY\n  FUTURES\n  OPTIONS\n  CURRENCY\n  COMMODITY\n}\n\nenum InstrumentType {\n  EQ // Equity\n  FUTIDX // Index Futures\n  FUTSTK // Stock Futures\n  OPTIDX // Index Options\n  OPTSTK // Stock Options\n  FUTCOM // Commodity Futures\n  OPTCOM // Commodity Options\n  FUTCUR // Currency Futures\n  OPTCUR // Currency Options\n}\n\nenum OrderSide {\n  BUY\n  SELL\n}\n\nenum OrderVariety {\n  REGULAR\n  AMO\n  BO // Bracket Order\n  CO // Cover Order\n  ICEBERG\n}\n\nenum OrderType {\n  MARKET\n  LIMIT\n  SL // Stop Loss\n  SLM // Stop Loss Market\n}\n\nenum TransactionType {\n  BUY\n  SELL\n}\n\nenum OrderValidity {\n  DAY\n  IOC // Immediate or Cancel\n  TTL // Time to Live\n}\n\nenum ProductType {\n  CNC // Cash and Carry (Delivery)\n  MIS // Margin Intraday Squareoff\n  NRML // Normal (For F&O)\n}\n\nenum OrderStatus {\n  PENDING\n  OPEN\n  COMPLETE\n  CANCELLED\n  REJECTED\n  MODIFIED\n  TRIGGER_PENDING\n}\n\nenum PositionType {\n  DAY\n  OVERNIGHT\n}\n\nenum GTTType {\n  SINGLE\n  OCO // One Cancels Other\n}\n\nenum TriggerType {\n  SINGLE\n  TWO_LEG\n}\n\nenum GTTStatus {\n  ACTIVE\n  TRIGGERED\n  DISABLED\n  EXPIRED\n  CANCELLED\n  REJECTED\n}\n\nenum AlertType {\n  PRICE_ALERT\n  PERCENTAGE_CHANGE\n  VOLUME_SPIKE\n  NEWS\n  CORPORATE_ACTION\n  MARGIN_CALL\n  ORDER_UPDATE\n}\n\nenum NotificationType {\n  ORDER_UPDATE\n  TRADE_EXECUTED\n  FUND_UPDATE\n  MARGIN_CALL\n  GTT_TRIGGERED\n  CORPORATE_ACTION\n  SYSTEM_ALERT\n}\n\nenum Priority {\n  LOW\n  NORMAL\n  HIGH\n  URGENT\n}\n\nenum CorporateActionType {\n  DIVIDEND\n  BONUS\n  SPLIT\n  MERGER\n  RIGHTS\n  BUYBACK\n  DELISTING\n}\n\nenum MartialStatus {\n  SINGLE\n  MARRIED\n}\n\nenum AnnualIncome {\n  BELOW_1_LAKH\n  BETWEEN_1_TO_5_LAKHS\n  BETWEEN_5_TO_10_LAKHS\n  BETWEEN_10_TO_25_LAKHS\n  BETWEEN_25_TO_1_CRORE\n  ABOVE_1_CRORE\n}\n\nenum TradingExperience {\n  NEW\n  BETWEEN_1_TO_5_YEARS\n  BETWEEN_5_TO_10_YEARS\n  BETWEEN_10_TO_15_YEARS\n  MORE_THAN_15_YEARS\n}\n\nenum Occupation {\n  BUSINESS\n  HOUSEWIFE\n  STUDENT\n  PROFESSIONAL\n  PRIVATE_SECTOR\n  AGRICULTURIST\n  GOVERMENT_SERVICE\n  PUBLIC_SECTOR\n  RETIRED\n  OTHERS\n}\n\nenum SettlementType {\n  QUATERLY\n  MONTHLY\n}\n",
  "inlineSchemaHash": "de8a5ce2210b819be034611e80b4bbd9a67c38d02bd5c434fadb04c745bb5899",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"panNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aadhaarNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kycStatus\",\"kind\":\"enum\",\"type\":\"KYCStatus\"},{\"name\":\"accountType\",\"kind\":\"enum\",\"type\":\"AccountType\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"UserProfile\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"bankAccounts\",\"kind\":\"object\",\"type\":\"BankAccount\",\"relationName\":\"BankAccountToUser\"},{\"name\":\"funds\",\"kind\":\"object\",\"type\":\"FundTransaction\",\"relationName\":\"FundTransactionToUser\"},{\"name\":\"holdings\",\"kind\":\"object\",\"type\":\"Holding\",\"relationName\":\"HoldingToUser\"},{\"name\":\"positions\",\"kind\":\"object\",\"type\":\"Position\",\"relationName\":\"PositionToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"trades\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"TradeToUser\"},{\"name\":\"watchlists\",\"kind\":\"object\",\"type\":\"Watchlist\",\"relationName\":\"UserToWatchlist\"},{\"name\":\"portfolios\",\"kind\":\"object\",\"type\":\"Portfolio\",\"relationName\":\"PortfolioToUser\"},{\"name\":\"gttOrders\",\"kind\":\"object\",\"type\":\"GTTOrder\",\"relationName\":\"GTTOrderToUser\"},{\"name\":\"baskets\",\"kind\":\"object\",\"type\":\"Basket\",\"relationName\":\"BasketToUser\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"UserVerification\",\"kind\":\"object\",\"type\":\"UserVerification\",\"relationName\":\"UserToUserVerification\"}],\"dbName\":null},\"UserVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage1\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stage2\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stage3\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserVerification\"}],\"dbName\":null},\"UserProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pincode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fatherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maritalStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occupation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"annualIncome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradingExperience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskProfile\",\"kind\":\"enum\",\"type\":\"RiskProfile\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserProfile\"}],\"dbName\":null},\"BankAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ifscCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"branchName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountHolderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"enum\",\"type\":\"BankAccountType\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BankAccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"FundTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionType\",\"kind\":\"enum\",\"type\":\"FundTransactionType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"paymentMode\",\"kind\":\"enum\",\"type\":\"PaymentMode\"},{\"name\":\"utrNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remarks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FundTransactionToUser\"}],\"dbName\":null},\"Margin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availableCash\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"usedMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"availableMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"collateralValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"openingBalance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"payin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"payout\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"spanMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"exposureMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"optionPremium\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Instrument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchangeToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"segment\",\"kind\":\"enum\",\"type\":\"Segment\"},{\"name\":\"instrumentType\",\"kind\":\"enum\",\"type\":\"InstrumentType\"},{\"name\":\"tickSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lotSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"strike\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"holdings\",\"kind\":\"object\",\"type\":\"Holding\",\"relationName\":\"HoldingToInstrument\"},{\"name\":\"positions\",\"kind\":\"object\",\"type\":\"Position\",\"relationName\":\"InstrumentToPosition\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"InstrumentToOrder\"},{\"name\":\"trades\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"InstrumentToTrade\"},{\"name\":\"marketDepth\",\"kind\":\"object\",\"type\":\"MarketDepth\",\"relationName\":\"InstrumentToMarketDepth\"},{\"name\":\"priceHistory\",\"kind\":\"object\",\"type\":\"PriceHistory\",\"relationName\":\"InstrumentToPriceHistory\"},{\"name\":\"watchlistItems\",\"kind\":\"object\",\"type\":\"WatchlistItem\",\"relationName\":\"InstrumentToWatchlistItem\"}],\"dbName\":null},\"MarketDepth\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"side\",\"kind\":\"enum\",\"type\":\"OrderSide\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToMarketDepth\"}],\"dbName\":null},\"PriceHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"open\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"high\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"low\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"close\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"volume\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ohlcDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToPriceHistory\"}],\"dbName\":null},\"Portfolio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"investedValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dayChange\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dayChangePercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPnlPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"xirr\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PortfolioToUser\"}],\"dbName\":null},\"Holding\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averagePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dayChange\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dayChangePercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"collateralQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collateralType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HoldingToUser\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"HoldingToInstrument\"}],\"dbName\":null},\"Position\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"overnightQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averagePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"m2m\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unrealised\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"realised\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"buyQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buyValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"buyPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sellQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sellValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sellPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"multiplier\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"positionType\",\"kind\":\"enum\",\"type\":\"PositionType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PositionToUser\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToPosition\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchangeOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchangeTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"placedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variety\",\"kind\":\"enum\",\"type\":\"OrderVariety\"},{\"name\":\"orderType\",\"kind\":\"enum\",\"type\":\"OrderType\"},{\"name\":\"transactionType\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"validity\",\"kind\":\"enum\",\"type\":\"OrderValidity\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"disclosedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"triggerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"averagePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"filledQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pendingQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cancelledQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"statusMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"exchangeUpdateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cancelledBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToOrder\"},{\"name\":\"trades\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"OrderToTrade\"}],\"dbName\":null},\"Trade\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionType\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"exchangeTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToTrade\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TradeToUser\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToTrade\"},{\"name\":\"charges\",\"kind\":\"object\",\"type\":\"TradeCharges\",\"relationName\":\"TradeToTradeCharges\"}],\"dbName\":null},\"TradeCharges\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brokerage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stt\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"exchangeTxnCharge\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gst\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sebiTurnover\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stampDuty\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalCharges\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"netAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"trade\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"TradeToTradeCharges\"}],\"dbName\":null},\"GTTOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gttType\",\"kind\":\"enum\",\"type\":\"GTTType\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"limitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stopLossPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"orderType\",\"kind\":\"enum\",\"type\":\"OrderType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"GTTStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"triggeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GTTOrderToUser\"}],\"dbName\":null},\"Watchlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWatchlist\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"WatchlistItem\",\"relationName\":\"WatchlistToWatchlistItem\"}],\"dbName\":null},\"WatchlistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"watchlistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"watchlist\",\"kind\":\"object\",\"type\":\"Watchlist\",\"relationName\":\"WatchlistToWatchlistItem\"},{\"name\":\"instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToWatchlistItem\"}],\"dbName\":null},\"Alert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alertType\",\"kind\":\"enum\",\"type\":\"AlertType\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"triggerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isTriggered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"triggeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AlertToUser\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationType\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":null},\"Basket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BasketToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"BasketItem\",\"relationName\":\"BasketToBasketItem\"}],\"dbName\":null},\"BasketItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradingSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange\",\"kind\":\"enum\",\"type\":\"Exchange\"},{\"name\":\"transactionType\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderType\",\"kind\":\"enum\",\"type\":\"OrderType\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"triggerPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"product\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basket\",\"kind\":\"object\",\"type\":\"Basket\",\"relationName\":\"BasketToBasketItem\"}],\"dbName\":null},\"CorporateAction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionType\",\"kind\":\"enum\",\"type\":\"CorporateActionType\"},{\"name\":\"exDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"recordDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"announcementDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ratio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dividendAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isProcessed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TradeJournal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emotionalState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learnings\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"DailyPnL\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"realizedPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unrealizedPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"equityPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"foPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"commodityPnl\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"charges\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

